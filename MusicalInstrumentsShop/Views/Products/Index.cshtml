@model PaginatedList<MusicalInstrumentsShop.BusinessLogic.DTOs.ProductDto>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h3 class="text-center text-white">Products</h3>

<form asp-action="Index" method="get">
    <div class="form-actions">
        <p>
            <b style="color:white; font-size: 15px">Find by category:</b> <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <a asp-action="Index" style="color:white; font-size: 15px">Back to Full List</a>
        </p>
    </div>
</form>


<table class="table table-hover table-dark">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["CodeSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Code</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Name</a>
            </th>
            <th>
                Price
            </th>
            <th>
                Products in stock
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["SupplierSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Supplier Name</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["CategorySortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Category Name</a>
            </th>
            <th>

            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NumberOfProducts)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SupplierName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CategoryName)
                </td>
                <td>
                    @{var firstPhoto = item.Photos.ElementAt(0).Name;}
                    <img src="~/images/products/@firstPhoto" width="60" height="60" />
                </td>

                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a> |
                    @Html.ActionLink("Add specification", "Create", "Specifications", new { id = @item.Id })
                </td>
            </tr>
        }
    </tbody>
</table>


@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-primary @nextDisabled">
    Next
</a>