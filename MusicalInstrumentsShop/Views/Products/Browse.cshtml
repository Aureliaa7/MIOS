@model MusicalInstrumentsShop.BusinessLogic.ProductFiltering.ProductsFilteringModel

@{
    ViewData["Title"] = "Products";
    if (User.IsInRole("Administrator"))
    {
        Layout = "~/Views/Shared/_AdminLayout.cshtml";
    }
    else if (User.IsInRole("Customer"))
    {
        Layout = "~/Views/Shared/_CustomerLayout.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/js/addProduct.js"></script>
    <script src="~/js/productFiltering.js"></script>
}

<h3 class="text-center text-white">Products</h3>

<div class="container">
    <div class="row filter-products-row">
        <form asp-action="Browse" class="jumbotron filter-products-form">
            <div class="col-md-10">
                <input asp-for="OnlyProductsInStock" type="checkbox" />
                <label class="control-label">In stock only</label>
            </div>
            <div class="col-md-12 add-margin-top-35">
                <label asp-for="CategoryId" class="control-label">Category</label>
                <select id="category-field" asp-for="CategoryId" class="form-control">
                    <option selected>Select category</option>
                </select>
            </div>
            <div class="col-md-12 add-margin-top-35">
                <label class="control-label">Minimum price</label>
                <input asp-for="MinPrice" class="form-control" />
            </div>
            <div class="col-md-12 add-margin-top-35">
                <label class="control-label">Maximum price</label>
                <input asp-for="MaxPrice" class="form-control" />
            </div>
            <div class="col-md-12 add-margin-top-35">
                <input type="submit" class="btn btn-primary" value="Filter" id="form-btn" />
            </div>
        </form>
    </div>
    <div class="row products-row">
        @{ foreach (var item in Model.Products)
            {
                <div class="col-md-5" style="margin:40px">
                    <div class="card">
                        <div class="card-image">
                            <div class="carousel slide" data-ride="carousel" id="product-carousel">
                                <div class="carousel-inner">
                                    <div class="carousel-item active">
                                        <img src="~/images/products/@item.Photos.ElementAt(0).Name" class="d-block w-100" alt="..." style="width: 150px; height: 150px;">
                                    </div>
                                    @{ for (int contor = 1; contor < item.Photos.Count(); contor++)
                                        {
                                            <div class="carousel-item">
                                                <img src="~/images/products/@item.Photos.ElementAt(contor).Name" class="d-block w-100" alt="..." style="width: 150px; height: 150px;">
                                            </div>
                                        }
                                    }
                                </div>
                                <a class="carousel-control-prev" href="#carouselControls" role="button" data-slide="prev">
                                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                    <span class="sr-only">Previous</span>
                                </a>
                                <a class="carousel-control-next" href="#carouselControls" role="button" data-slide="next">
                                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                    <span class="sr-only">Next</span>
                                </a>
                            </div>
                        </div>

                        <div class="card-content">
                            <b> @Html.DisplayNameFor(modelItem => item.Name): </b>
                            @Html.DisplayFor(modelItem => item.Name)<br />

                            @if(item.NumberOfProducts > 0)
                            {
                                <b> In Stock</b><br />
                            }
                            else
                            {
                                <b> Sold Out</b><br />
                            }

                            <b> @Html.DisplayNameFor(modelItem => item.Price): $</b>
                            @Html.DisplayFor(modelItem => item.Price)<br />

                            <b>@Html.DisplayNameFor(modelItem => item.CategoryName): </b>
                            @Html.DisplayFor(modelItem => item.CategoryName)<br />
                        </div>

                        <div class="card-footer">
                            <form style="display:inline-block;" asp-action="Details" asp-route-id="@item.Id" method="post">
                                <input type="submit" value="Details" class="btn btn-dark" />
                            </form>
                            @if (item.NumberOfProducts > 0)
                            {
                                <form style="display:inline-block;" asp-action="Add" asp-controller="Cart" asp-route-id="@item.Id" method="post">
                                    <input type="submit" value="Add to cart" class="btn btn-dark" />
                                </form>
                            }
                            <form style="display:inline-block;" asp-action="Create" asp-controller="WishlistProducts" asp-route-id="@item.Id" method="post">
                                <input type="submit" value="Add to wishlist" class="btn btn-dark" />
                            </form>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>

@{
    var prevDisabled = !Model.Products.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Products.HasNextPage ? "disabled" : "";
}

<div class="nextPrevBtns">
    <a asp-action="Browse"
       asp-route-pageNumber="@(Model.Products.PageIndex - 1)"
       class="btn btn-primary @prevDisabled">
        Previous
    </a>
    <a asp-action="Browse"
       asp-route-pageNumber="@(Model.Products.PageIndex + 1)"
       class="btn btn-primary @nextDisabled">
        Next
    </a>
</div>